plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.appdistribution'
    id 'kotlin-android'
}

def keySignFile = project.keySignFile
def keySignPassword = project.keySignPassword
def keySignAlias = project.keySignAlias
def keySignAliasPassword = project.keySignAliasPassword


def AppVersionCode = project.AppBuildNo;
def AppVersionName = project.AppVersionName;

android {
    compileSdk project.compileSDK
    signingConfigs {
        release {
            keyAlias keySignAlias
            keyPassword keySignAliasPassword
            storeFile file(keySignFile)
            storePassword keySignPassword


        }
    }
    defaultConfig {
        applicationId "devesh.ephrine.qr.code"
        minSdk project.MiniApiTarget
        //  minSdk 21
        targetSdk project.compileSDK
        versionCode AppVersionCode
        versionName AppVersionName

       // testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resValue "string", "app_version_code", "\"" + AppVersionCode + "\""

        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        signingConfig signingConfigs.release

    }

    buildTypes {
        debug {
            resValue "string", "app_version_name", "\"" + AppVersionName + "\""

            resValue "bool", "FirebaseAnalytics_Enabled", "false"
            resValue "bool", "FirebaseAnalytics_Deactivated", "true"
            // SPEEDUP BUILD
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false

        }
        internal {
            resValue "string", "app_version_name", "\"" + AppVersionName + " (Internal)" + "\""

            resValue "bool", "FirebaseAnalytics_Enabled", "false"
            resValue "bool", "FirebaseAnalytics_Deactivated", "true"

            minifyEnabled true
          //  shrinkResources true
        //    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

           // signingConfig signingConfigs.release

            /*firebaseAppDistribution {
                releaseNotes = "Version: $AppVersionName (Internal) \nBuild no: $AppVersionCode"
                groups = "testers"
            }*/
        }
        release {
            resValue "string", "app_version_name", "\"" + AppVersionName + "\""

            resValue "bool", "FirebaseAnalytics_Enabled", "true"
            resValue "bool", "FirebaseAnalytics_Deactivated", "false"

            minifyEnabled true
         //   shrinkResources true

          //  signingConfig signingConfigs.release

            /* firebaseAppDistribution {
                 releaseNotes = "Version: $AppVersionName \nBuild no: $AppVersionCode"
                 groups = "testers"
             }*/

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }

    namespace 'devesh.ephrine.qr.code'

}

dependencies {


// Firebase
    implementation platform("com.google.firebase:firebase-bom:$project.firebaseBOM_version")
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation "com.google.android.gms:play-services-ads:$project.PlayServicesAds_version"
    implementation 'com.google.firebase:firebase-perf'
    implementation 'com.google.firebase:firebase-appcheck-playintegrity'
    implementation 'com.google.firebase:firebase-config'
    implementation 'com.google.firebase:firebase-inappmessaging-display'
    implementation 'com.google.firebase:firebase-messaging'

    implementation "androidx.fragment:fragment:$project.fragment_version"

    implementation "androidx.appcompat:appcompat:$project.appcompat_version"
    implementation "com.google.android.material:material:$project.material_version"
    implementation "androidx.constraintlayout:constraintlayout:$project.constraintlayout_version"
    implementation project(path: ':common')
    implementation project(path: ':CreateQR')
    implementation project(path: ':qrcode-viewer')
    implementation project(path: ':database')
    implementation project(path: ':cropper')

    // Preferences
    implementation "androidx.preference:preference:$project.preferences_version"
    implementation project(path: ':MoreApps')
    implementation project(path: ':billing')


//    testImplementation 'junit:junit:4.13.2'
    // androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    // androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // MLKit Barcode
    implementation "com.google.mlkit:barcode-scanning:$project.barcode_scanning_version"

    // CameraX

    implementation "androidx.camera:camera-core:$project.camerax_version"
    implementation "androidx.camera:camera-camera2:$project.camerax_version"
    implementation "androidx.camera:camera-lifecycle:$project.camerax_version"
    implementation "androidx.camera:camera-video:$project.camerax_version"

    implementation "androidx.camera:camera-view:$project.camerax_version"
    implementation "androidx.camera:camera-extensions:$project.camerax_version"

    // Zxing
    implementation "com.google.zxing:core:$project.zxing_version"

    // Room Database

    implementation "androidx.room:room-runtime:$project.room_version"
    implementation 'androidx.activity:activity:1.10.1'
    annotationProcessor "androidx.room:room-compiler:$project.room_version"

    // optional - RxJava2 support for Room
    implementation "androidx.room:room-rxjava2:$project.room_version"

    // optional - RxJava3 support for Room
    implementation "androidx.room:room-rxjava3:$project.room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$project.room_version"

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$project.room_version"

    // GSON
    implementation "com.google.code.gson:gson:$project.gson_version"

    // WiFiUtils
    implementation "io.github.thanosfisherman.wifiutils:wifiutils:$project.wifiutils_version"

    // CCP
    implementation "com.hbb20:ccp:$project.ccp_version"


    // ViewModel
    // implementation "androidx.lifecycle:lifecycle-viewmodel:$project.lifecycle_version"
    //implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$project.lifecycle_version"

    implementation "androidx.browser:browser:$project.browser_version"

    //Google Play Core
    // implementation "com.google.android.play:core:$project.play_core_version"
    implementation "com.google.android.play:review:$project.play_app_review"


    implementation "com.android.billingclient:billing:$project.billing_version"
    implementation "com.google.android.gms:play-services-base:$project.play_services_base"

    //MS App Center
//    def appCenterSdkVersion = '4.3.1'

    implementation "com.microsoft.appcenter:appcenter-analytics:$project.MSAppCenter_version"
    implementation "com.microsoft.appcenter:appcenter-crashes:$project.MSAppCenter_version"

 //   implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.20"))
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.22"))


// Kotlin
    //implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.10"
    // implementation "org.jetbrains.kotlin:kotlin-stdlib:2.1.20"


    implementation "com.google.guava:guava:33.4.8-android" // Or the latest compatible version
}


/*
configurations {
    all {
        resolutionStrategy {
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.21'
            force 'org.jetbrains.kotlin:kotlin-stdlib:1.8.10'
        }
    }
}*/


